{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"buttonSelection\":\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        selectedComponent: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/qasimshaikh/Development/code/Woke_native/woke/Redux/reducer.js"],"names":["initialState","reducer","state","action","type","console","log","payload","selectedComponent"],"mappings":";;;;;;AAAA,IAAIA,YAAY,GAAG,EAAnB;;AAII,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,+BAAUL,KAAV;AAAgBM,QAAAA,iBAAiB,EAACL,MAAM,CAACI;AAAzC;;AAKJ;AACE,aAAOL,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["let initialState = {\n    \n    }\n    \n    const reducer = (state = initialState, action) => {\n      switch (action.type) {\n        case \"buttonSelection\":\n            console.log(action.payload)\n            return{...state,selectedComponent:action.payload}\n\n\n\n\n        default:\n          return state;\n      }\n    }\n    \n    export default reducer\n    "]},"metadata":{},"sourceType":"module"}